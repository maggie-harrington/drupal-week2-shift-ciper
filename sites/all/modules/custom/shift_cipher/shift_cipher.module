<?php

function shift_cipher_menu() {
  $items['shift_cipher'] = array(
    'title' => 'Shift Cipher',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('shift_cipher_form'),
    'access callback' => TRUE,
    'type' => MENU_NORMAL_ITEM,
  );

  $items['shift_cipher_success_page'] = array(
    'title' => 'Encryption complete!',
    'page callback' => 'shift_cipher_success',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );

  return $items;
}

function shift_cipher_form() {
  $form['shift_value'] = array(
    '#title' => 'Shift Value',
    '#type' => 'textfield',
    '#description' => t('Enter a shift value. Positive integers only.'),
    '#required' => TRUE,
    '#element_validate' => array(
      'element_validate_integer_positive',
    ),
  );

  $form['direction'] = array(
    '#title' => 'Direction',
    '#type' => 'textfield',
    '#description' => t('Enter a direction, "left" or "right" only.'),
    '#required' => TRUE,
    '#element_validate' => array(
      'direction_element_validate',
    ),
  );

  $form['phrase'] = array(
    '#title' => 'Phrase',
    '#type' => 'textfield',
    '#description' => t('Enter a phrase to be encrypted. Besides words, you may use only spaces and punctuation.'),
    '#required' => TRUE,
    '#element_validate' => array(
      'phrase_element_validate',
    ),
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => 'Submit',
  );

  return $form;
}

function direction_element_validate($element) {
  if ($element['#value'] != 'left' && $element['#value'] != 'right') {
    form_error($element, t('The only directions allowed are "left" and "right".'));
  }
}

function phrase_element_validate($element) {
  if (!(preg_match('/^[a-zA-Z\040\.\?\!\,\;\:\-\(\)\{\}\'\"\[\]]+$/i', $element['#value']))) {
    form_error($element, t('Your phrase may only contain words, spaces, and punctuation.'));
  }
}

function shift_cipher_form_submit($form, &$form_state) {
  $shift_value = intval($form_state['values']['shift_value']);
  $direction = $form_state['values']['direction'];
  $phrase = strtolower($form_state['values']['phrase']);

  $alphabet_array = str_split('abcdefghijklmnopqrstuvwxyz');

  if ($shift_value >= 26) {
    $shift_value = $shift_value % 26; //allows for shift value of any positive integer
  }

  $phrase_word_array = explode(' ', $phrase); //creates array of single word strings
  $cipher_word_array = array();

  foreach ($phrase_word_array as $word) {
    $phrase_character_array = str_split($word); //creates array of single character strings
    $cipher_character_array = array();

    foreach ($phrase_character_array as $character) {
      //compare $phrase_character_array to $alphabet_array
      if (!in_array($character, $alphabet_array)) {
        array_push($cipher_character_array, $character);
      } else {
        $position = array_search($character, $alphabet_array);

        if ($direction == 'right') {
          if (intval($position) + $shift_value >= 26) {
            //allows for shift past the end of $alphabet_array
            $position_new = intval($position) + $shift_value - 26;
          } else {
            $position_new = intval($position) + $shift_value;
          }
        } else {
          if (intval($position) - $shift_value < 0) {
            //allows for shift past the beginning of $alphabet_array
            $position_new = intval($position) - $shift_value + 26;
          } else {
            $position_new = intval($position) - $shift_value;
          }
        }

        $cipher_character = $alphabet_array[$position_new];
        array_push($cipher_character_array, $cipher_character);
      }
    }
    $cipher_word = implode('', $cipher_character_array);
    array_push($cipher_word_array, $cipher_word);
  }
  $cipher_phrase = implode(' ', $cipher_word_array);

  $_SESSION['cipher_phrase'] = $cipher_phrase;
  $form_state['redirect'] = 'shift_cipher_success_page';
}

function shift_cipher_success() {
  $output = $_SESSION['cipher_phrase'];

  return "
  <h3>Your encrypted phrase is: </h3><br>
  <p>$output</p>
  ";
}
